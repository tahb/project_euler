require 'rubygems'
require 'pry'

class Question

  def run
    Question.instance_methods(false).reject{|m| m == :run}.each do |method|
      puts "Question #{method.to_s}: #{self.send(method)}"
    end
  end

  # If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
  # Find the sum of all the multiples of 3 or 5 below 1000.
  def one
    (1..999).to_a.inject([]){|array, n| array << n if ((n%5).zero? || (n%3).zero?); array }.inject(:+)
  end

  # Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
  # 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  # By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
  def two
    a=1; b=2; f=3; t=b; (a,b=b,f; f=(a+b); t+=b if b.even?) while(f<4000000)
    return t
  end

  #
  def three

  end
end

Question.new.run